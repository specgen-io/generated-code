version: 2.1

parameters:
  specgen-version:
    type: string
    default: 2.0.421

jobs:
  generate-commit:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - install-specgen
      - run:
          name: Generate models
          command: |
            rm -R -- ./models/*/
            ./specgen openapi --spec-file ./models/spec.yaml --out-file ./models/openapi/swagger.yaml
            ./specgen models-java --spec-file ./models/spec.yaml --generate-path ./models/java
            ./specgen models-go --spec-file ./models/spec.yaml --generate-path ./models/go
            ./specgen models-ruby --spec-file ./models/spec.yaml --generate-path ./models/ruby
            ./specgen models-scala-circe --spec-file ./models/spec.yaml --generate-path ./models/scala-circe
            ./specgen models-ts --validation io-ts --spec-file ./models/spec.yaml --generate-path ./models/ts-iots
            ./specgen models-ts --validation superstruct --spec-file ./models/spec.yaml --generate-path ./models/ts-superstruct
      - tree:
          path: ./models
      - run:
          name: Generate clients
          command: |
            rm -R -- ./clients/*/
            ./specgen openapi --spec-file ./clients/spec.yaml --out-file ./clients/openapi/swagger.yaml
            ./specgen client-go --spec-file ./clients/spec.yaml --generate-path ./clients/go
            ./specgen client-ruby --spec-file ./clients/spec.yaml --generate-path ./clients/ruby
            ./specgen client-scala-sttp --spec-file ./clients/spec.yaml --generate-path ./clients/scala-sttp
            ./specgen client-ts-axios --validation superstruct --spec-file ./clients/spec.yaml --generate-path ./clients/ts-axios-superstruct
            ./specgen client-ts-axios --validation io-ts --spec-file ./clients/spec.yaml --generate-path ./clients/ts-axios-iots
      - tree:
          path: ./clients
      - run:
          name: Generate services
          command: |
            rm -R -- ./services/*/
            ./specgen openapi --spec-file ./services/spec.yaml --out-file ./services/openapi/swagger.yaml
            ./specgen service-go --spec-file ./services/spec.yaml --generate-path ./services/go
            ./specgen service-scala-play --spec-file ./services/spec.yaml --generate-path ./services/scala-play
            ./specgen service-ts --server express --validation superstruct --spec-file ./services/spec.yaml --generate-path ./services/ts-express-superstruct
            ./specgen service-ts --server koa --validation superstruct --spec-file ./services/spec.yaml --generate-path ./services/ts-koa-superstruct
      - tree:
          path: ./services
      - run:
          name: Remove specgen
          command: rm specgen
      - run:
          name: Commit changes
          command: |
            git add --all
            if [[ `git status --porcelain` ]]; then
              git config --global user.email "vladimir.sapronov@gmail.com"
              git config --global user.name "vsapronov"
              git commit -m "[skip ci] Generated code with specgen <<pipeline.parameters.specgen-version>>"
              git remote set-url origin https://vsapronov:$GITHUB_TOKEN@github.com/specgen-io/generated-code.git
              git push
            else
              echo "No changes detected - nothing to commit"
            fi

commands:
  tree:
    parameters:
      path:
        type: string
        default: .
    steps:
      - run:
          name: Print flie system tree
          command: find <<parameters.path>> | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/"
  install-specgen:
    steps:
      - run:
          name: Install specgen
          command: |
            curl -L https://github.com/specgen-io/specgen/releases/download/v<<pipeline.parameters.specgen-version>>/specgen_linux_amd64.zip > specgen_linux_amd64.zip
            unzip -o specgen_linux_amd64.zip
            rm specgen_linux_amd64.zip

workflows:
  generate-commit:
    jobs:
      - generate-commit:
          context: specgen