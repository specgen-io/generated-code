version: 2.1

parameters:
  specgen-version:
    type: string
    default: 2.1.920
  specgen-version-major:
    type: string
    default: v2

jobs:
  generated-code:
    docker:
      - image: cimg/go:1.16.4
    steps:
      - checkout
      - run:
          name: Install specgen
          command: |
            go install github.com/specgen-io/specgen/<<pipeline.parameters.specgen-version-major>>@v<< pipeline.parameters.specgen-version >>
            specgen --help
      - run:
          name: Clean code
          command: |
            rm -R -- ./models/*/
            rm -R -- ./clients/*/
            rm -R -- ./services/*/
      - gen-models:
          path: models/openapi
          specgen: openapi --spec-file ./spec.yaml --out-file ./swagger.yaml
      - gen-models:
          path: models/java
          specgen: models-java --spec-file ./spec.yaml --generate-path .
      - gen-models:
          path: models/kotlin-jackson
          specgen: models-kotlin --spec-file ./spec.yaml --generate-path .
      - gen-models:
          path: models/go
          specgen: models-go --spec-file ./spec.yaml --module-name test-models --generate-path .
      - gen-models:
          path: models/ruby
          specgen: models-ruby --spec-file ./spec.yaml --generate-path .
      - gen-models:
          path: models/scala-circe
          specgen: models-scala-circe --spec-file ./spec.yaml --generate-path .
      - gen-models:
          path: models/ts-iots
          specgen: models-ts --validation io-ts --spec-file ./spec.yaml --generate-path .
      - gen-models:
          path: models/ts-superstruct
          specgen: models-ts --validation superstruct --spec-file ./spec.yaml --generate-path .

      - gen-client:
          path: clients/openapi
          specgen: openapi --spec-file ./spec.yaml --out-file ./swagger.yaml
      - gen-client:
          path: clients/java-okhttp
          specgen: client-java-okhttp --spec-file ./spec.yaml --package-name test_client --generate-path .
      - gen-client:
          path: clients/go
          specgen: client-go --spec-file ./spec.yaml --module-name test-client --generate-path .
      - gen-client:
          path: clients/ruby
          specgen: client-ruby --spec-file ./spec.yaml --generate-path .
      - gen-client:
          path: clients/scala-sttp
          specgen: client-scala-sttp --spec-file ./spec.yaml --generate-path .
      - gen-client:
          path: clients/ts-axios-superstruct
          specgen: client-ts-axios --validation superstruct --spec-file ./spec.yaml --generate-path .
      - gen-client:
          path: clients/ts-axios-iots
          specgen: client-ts-axios --validation io-ts --spec-file ./spec.yaml --generate-path .

      - gen-service:
          path: services/openapi
          specgen: openapi --spec-file ./spec.yaml --out-file ./swagger.yaml
      - gen-service:
          path: services/java-spring
          specgen: service-java-spring --spec-file ./spec.yaml --package-name test_service --generate-path . --services-path ./services
      - gen-service:
          path: services/go
          specgen: service-go --spec-file ./spec.yaml --module-name test-service --generate-path .
      - gen-service:
          path: services/scala-play
          specgen: service-scala-play --spec-file ./spec.yaml --generate-path . --services-path ./services
      - gen-service:
          path: services/ts-express-superstruct
          specgen: service-ts --server express --validation superstruct --spec-file ./spec.yaml --generate-path . --services-path ./services
      - gen-service:
          path: services/ts-koa-superstruct
          specgen: service-ts --server koa --validation superstruct --spec-file ./spec.yaml --generate-path . --services-path ./services

      - tree:
          path: ./models
      - tree:
          path: ./clients
      - tree:
          path: ./services

      - run:
          name: Commit changes
          command: |
            git add --all
            git config --global user.email $GITHUB_EMAIL
            git config --global user.name $GITHUB_USER
            git remote set-url origin https://$GITHUB_USER:$GITHUB_TOKEN@github.com/specgen-io/generated-code.git
            if [[ `git status --porcelain` ]]; then
              git commit -m "[skip ci] Generated code with specgen <<pipeline.parameters.specgen-version>>"
              git push
            else
              echo "No changes detected - nothing to commit"
            fi
            git tag -f -a v<<pipeline.parameters.specgen-version>> -m "Specgen verison: v<<pipeline.parameters.specgen-version>>"
            git push -f --tags

commands:
  gen-models:
    parameters:
      path:
        type: string
      specgen:
        type: string
    steps:
      - run:
          name: Download models spec
          command: |
            if [ ! -f /tmp/models/spec.yaml ]; then
              mkdir -p /tmp/models/
              cd /tmp/models/
              curl -LJO https://raw.githubusercontent.com/specgen-io/test-models/main/spec.yaml
            fi
      - run:
          name: Generate models code
          command: |
            mkdir -p <<parameters.path>>
            cd <<parameters.path>>
            cp /tmp/models/spec.yaml ./spec.yaml
            specgen <<parameters.specgen>>
  gen-client:
    parameters:
      path:
        type: string
      specgen:
        type: string
    steps:
      - run:
          name: Download clients spec
          command: |
            if [ ! -f /tmp/clients/spec.yaml ]; then
              mkdir -p /tmp/clients/
              cd /tmp/clients/
              curl -LJO https://raw.githubusercontent.com/specgen-io/test-clients/main/spec.yaml
            fi
      - run:
          name: Generate client code
          command: |
            mkdir -p <<parameters.path>>
            cd <<parameters.path>>
            cp /tmp/clients/spec.yaml ./spec.yaml
            specgen <<parameters.specgen>>
  gen-service:
    parameters:
      path:
        type: string
      specgen:
        type: string
    steps:
      - run:
          name: Download service spec
          command: |
            if [ ! -f /tmp/services/spec.yaml ]; then
              mkdir -p /tmp/services/
              cd /tmp/services/
              curl -LJO https://raw.githubusercontent.com/specgen-io/test-services/main/spec.yaml
            fi
      - run:
          name: Generate service code
          command: |
            mkdir -p <<parameters.path>>
            cd <<parameters.path>>
            cp /tmp/services/spec.yaml ./spec.yaml
            specgen <<parameters.specgen>>

  tree:
    parameters:
      path:
        type: string
        default: .
    steps:
      - run:
          name: Print flie system tree
          command: find <<parameters.path>> | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/"

workflows:
  generated-code:
    jobs:
      - generated-code:
          context: specgen
